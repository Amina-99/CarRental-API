// <auto-generated />
using System;
using DiplomskiRad.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiplomskiRad.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211002091652_admin")]
    partial class admin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiplomskiRad.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RolaId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RolaId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            PasswordHash = new byte[] { 44, 223, 8, 167, 193, 169, 251, 179, 58, 244, 105, 153, 223, 155, 183, 58, 192, 173, 100, 200, 252, 217, 242, 174, 187, 19, 41, 238, 76, 12, 183, 74, 211, 66, 62, 188, 57, 234, 98, 234, 152, 207, 218, 128, 247, 108, 85, 212, 198, 128, 44, 9, 225, 163, 71, 234, 204, 91, 247, 205, 117, 164, 24, 158 },
                            PasswordSalt = new byte[] { 224, 133, 211, 27, 116, 84, 91, 147, 149, 190, 180, 64, 124, 179, 245, 246, 186, 85, 28, 231, 161, 63, 191, 141, 6, 101, 83, 31, 96, 99, 235, 193, 114, 58, 104, 92, 103, 157, 133, 49, 43, 192, 188, 204, 158, 201, 77, 27, 63, 78, 133, 164, 123, 248, 42, 82, 188, 186, 237, 244, 199, 151, 74, 207, 215, 225, 240, 199, 115, 65, 6, 247, 219, 50, 138, 156, 10, 53, 28, 80, 92, 4, 203, 67, 207, 173, 244, 55, 108, 139, 21, 150, 23, 102, 99, 75, 62, 228, 114, 151, 114, 220, 242, 215, 150, 225, 165, 83, 236, 233, 223, 131, 171, 136, 15, 102, 36, 154, 148, 164, 249, 115, 60, 115, 187, 141, 142, 207 },
                            RolaId = 1,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AirConditioner")
                        .HasColumnType("bit");

                    b.Property<bool>("Blueotooth")
                        .HasColumnType("bit");

                    b.Property<bool>("CentralLocking")
                        .HasColumnType("bit");

                    b.Property<int>("Door")
                        .HasColumnType("int");

                    b.Property<string>("GearShift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Mp")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NavigationSystem")
                        .HasColumnType("bit");

                    b.Property<bool>("ParkingSensors")
                        .HasColumnType("bit");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PricePerDay")
                        .HasColumnType("int");

                    b.Property<int>("Seat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("DateRange")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PricePerDay")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CarId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("DiplomskiRad.Entities.AppUser", b =>
                {
                    b.HasOne("DiplomskiRad.Entities.Role", "Rola")
                        .WithMany("AppUsers")
                        .HasForeignKey("RolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rola");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Reservation", b =>
                {
                    b.HasOne("DiplomskiRad.Entities.AppUser", "AppUser")
                        .WithMany("Reservations")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomskiRad.Entities.Car", "Car")
                        .WithMany("Reservations")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.AppUser", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Car", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Role", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
