// <auto-generated />
using System;
using DiplomskiRad.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiplomskiRad.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211002104633_remove-price")]
    partial class removeprice
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiplomskiRad.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RolaId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RolaId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            PasswordHash = new byte[] { 228, 122, 45, 53, 122, 126, 204, 144, 38, 227, 99, 25, 127, 68, 191, 223, 39, 236, 117, 181, 142, 186, 197, 203, 58, 119, 163, 254, 12, 188, 133, 227, 239, 107, 160, 100, 177, 59, 131, 17, 102, 220, 178, 184, 105, 98, 150, 158, 209, 162, 125, 1, 10, 69, 184, 91, 173, 226, 118, 246, 254, 233, 139, 195 },
                            PasswordSalt = new byte[] { 172, 12, 169, 188, 220, 216, 193, 105, 167, 223, 219, 7, 91, 186, 161, 215, 132, 244, 212, 232, 138, 61, 219, 202, 163, 12, 181, 107, 17, 153, 94, 40, 232, 141, 163, 229, 60, 139, 133, 58, 125, 152, 142, 86, 50, 168, 69, 9, 56, 198, 228, 225, 109, 239, 151, 66, 88, 203, 19, 76, 132, 204, 10, 137, 118, 0, 12, 210, 126, 15, 75, 55, 121, 251, 154, 25, 71, 166, 68, 225, 86, 13, 93, 211, 151, 10, 109, 30, 152, 61, 241, 141, 213, 67, 116, 251, 128, 163, 240, 7, 1, 223, 182, 123, 60, 189, 123, 65, 179, 252, 61, 184, 81, 131, 238, 9, 199, 150, 222, 72, 91, 150, 249, 2, 20, 86, 0, 211 },
                            RolaId = 1,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AirConditioner")
                        .HasColumnType("bit");

                    b.Property<bool>("Blueotooth")
                        .HasColumnType("bit");

                    b.Property<bool>("CentralLocking")
                        .HasColumnType("bit");

                    b.Property<int>("Door")
                        .HasColumnType("int");

                    b.Property<string>("GearShift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Mp")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NavigationSystem")
                        .HasColumnType("bit");

                    b.Property<bool>("ParkingSensors")
                        .HasColumnType("bit");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PricePerDay")
                        .HasColumnType("int");

                    b.Property<int>("Seat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("DateRange")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CarId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("DiplomskiRad.Entities.AppUser", b =>
                {
                    b.HasOne("DiplomskiRad.Entities.Role", "Rola")
                        .WithMany("AppUsers")
                        .HasForeignKey("RolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rola");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Reservation", b =>
                {
                    b.HasOne("DiplomskiRad.Entities.AppUser", "AppUser")
                        .WithMany("Reservations")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomskiRad.Entities.Car", "Car")
                        .WithMany("Reservations")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.AppUser", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Car", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("DiplomskiRad.Entities.Role", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
